{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/di/injector.js","angular2/src/di/@traceur/generated/TemplateParser/9","angular2/src/di/@traceur/generated/TemplateParser/7","angular2/src/di/@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","angular2/src/di/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/34","angular2/src/di/@traceur/generated/TemplateParser/829","angular2/src/di/@traceur/generated/TemplateParser/833"],"names":[],"mappings":"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","file":"angular2/src/di/injector.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {Map, List, MapWrapper, ListWrapper} from 'angular2/src/facade/collection';\nimport {Binding, BindingBuilder, bind} from './binding';\nimport {ProviderError, NoProviderError, InvalidBindingError,\n  AsyncBindingError, CyclicDependencyError, InstantiationError} from './exceptions';\nimport {FunctionWrapper, Type, isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {Key} from './key';\n\nvar _constructing = new Object();\n\nclass _Waiting {\n  promise:Promise;\n  constructor(promise:Promise) {\n    this.promise = promise;\n  }\n}\nfunction _isWaiting(obj):boolean {\n  return obj instanceof _Waiting;\n}\n\n\nexport class Injector {\n  _bindings:List;\n  _instances:List;\n  _parent:Injector;\n  _defaultBindings:boolean;\n  _asyncStrategy: _AsyncInjectorStrategy;\n  _syncStrategy:_SyncInjectorStrategy;\n  constructor(bindings:List, {parent=null, defaultBindings=false}={}) {\n    var flatten = _flattenBindings(bindings, MapWrapper.create());\n    this._bindings = this._createListOfBindings(flatten);\n    this._instances = this._createInstances();\n    this._parent = parent;\n    this._defaultBindings = defaultBindings;\n\n    this._asyncStrategy = new _AsyncInjectorStrategy(this);\n    this._syncStrategy = new _SyncInjectorStrategy(this);\n  }\n\n  get(token) {\n    return this._getByKey(Key.get(token), false, false, false);\n  }\n\n  getOptional(token) {\n    return this._getByKey(Key.get(token), false, false, true);\n  }\n\n  asyncGet(token) {\n    return this._getByKey(Key.get(token), true, false, false);\n  }\n\n  createChild(bindings:List):Injector {\n    return new Injector(bindings, {parent: this});\n  }\n\n\n  _createListOfBindings(flattenBindings):List {\n    var bindings = ListWrapper.createFixedSize(Key.numberOfKeys + 1);\n    MapWrapper.forEach(flattenBindings, (v, keyId) => bindings[keyId] = v);\n    return bindings;\n  }\n\n  _createInstances():List {\n    return ListWrapper.createFixedSize(Key.numberOfKeys + 1);\n  }\n\n  _getByKey(key:Key, returnPromise:boolean, returnLazy:boolean, optional:boolean) {\n    if (returnLazy) {\n      return () => this._getByKey(key, returnPromise, false, optional);\n    }\n\n    var strategy = returnPromise ? this._asyncStrategy : this._syncStrategy;\n\n    var instance = strategy.readFromCache(key);\n    if (isPresent(instance)) return instance;\n\n    instance = strategy.instantiate(key);\n    if (isPresent(instance)) return instance;\n\n    if (isPresent(this._parent)) {\n      return this._parent._getByKey(key, returnPromise, returnLazy, optional);\n    }\n\n    if (optional) {\n      return null;\n    } else {\n      throw new NoProviderError(key);\n    }\n  }\n\n  _resolveDependencies(key:Key, binding:Binding, forceAsync:boolean):List {\n    try {\n      var getDependency = d => this._getByKey(d.key, forceAsync || d.asPromise, d.lazy, d.optional);\n      return ListWrapper.map(binding.dependencies, getDependency);\n    } catch (e) {\n      this._clear(key);\n      if (e instanceof ProviderError) e.addKey(key);\n      throw e;\n    }\n  }\n\n  _getInstance(key:Key) {\n    if (this._instances.length <= key.id) return null;\n    return ListWrapper.get(this._instances, key.id);\n  }\n\n  _setInstance(key:Key, obj) {\n    ListWrapper.set(this._instances, key.id, obj);\n  }\n\n  _getBinding(key:Key) {\n    var binding = this._bindings.length <= key.id ?\n      null :\n      ListWrapper.get(this._bindings, key.id);\n\n    if (isBlank(binding) && this._defaultBindings) {\n      return bind(key.token).toClass(key.token);\n    } else {\n      return binding;\n    }\n  }\n\n  _markAsConstructing(key:Key) {\n    this._setInstance(key, _constructing);\n  }\n\n  _clear(key:Key) {\n    this._setInstance(key, null);\n  }\n}\n\n\nclass _SyncInjectorStrategy {\n  injector:Injector;\n  constructor(injector:Injector) {\n    this.injector = injector;\n  }\n\n  readFromCache(key:Key) {\n    if (key.token === Injector) {\n      return this.injector;\n    }\n\n    var instance = this.injector._getInstance(key);\n\n    if (instance === _constructing) {\n      throw new CyclicDependencyError(key);\n    } else if (isPresent(instance) && !_isWaiting(instance)) {\n      return instance;\n    } else {\n      return null;\n    }\n  }\n\n  instantiate(key:Key) {\n    var binding = this.injector._getBinding(key);\n    if (isBlank(binding)) return null;\n\n    if (binding.providedAsPromise) throw new AsyncBindingError(key);\n\n    //add a marker so we can detect cyclic dependencies\n    this.injector._markAsConstructing(key);\n\n    var deps = this.injector._resolveDependencies(key, binding, false);\n    return this._createInstance(key, binding, deps);\n  }\n\n  _createInstance(key:Key, binding:Binding, deps:List) {\n    try {\n      var instance = FunctionWrapper.apply(binding.factory, deps);\n      this.injector._setInstance(key, instance);\n      return instance;\n    } catch (e) {\n      this.injector._clear(key);\n      throw new InstantiationError(e, key);\n    }\n  }\n}\n\n\nclass _AsyncInjectorStrategy {\n  injector:Injector;\n  constructor(injector:Injector) {\n    this.injector = injector;\n  }\n\n  readFromCache(key:Key) {\n    if (key.token === Injector) {\n      return PromiseWrapper.resolve(this.injector);\n    }\n\n    var instance = this.injector._getInstance(key);\n\n    if (instance === _constructing) {\n      throw new CyclicDependencyError(key);\n    } else if (_isWaiting(instance)) {\n      return instance.promise;\n    } else if (isPresent(instance)) {\n      return PromiseWrapper.resolve(instance);\n    } else {\n      return null;\n    }\n  }\n\n  instantiate(key:Key) {\n    var binding = this.injector._getBinding(key);\n    if (isBlank(binding)) return null;\n\n    //add a marker so we can detect cyclic dependencies\n    this.injector._markAsConstructing(key);\n\n    var deps = this.injector._resolveDependencies(key, binding, true);\n    var depsPromise = PromiseWrapper.all(deps);\n\n    var promise = PromiseWrapper\n      .then(depsPromise, null, (e) => this._errorHandler(key, e))\n      .then(deps => this._findOrCreate(key, binding, deps))\n      .then(instance => this._cacheInstance(key, instance));\n\n    this.injector._setInstance(key, new _Waiting(promise));\n    return promise;\n  }\n\n  _errorHandler(key:Key, e):Promise {\n    if (e instanceof ProviderError) e.addKey(key);\n    return PromiseWrapper.reject(e);\n  }\n\n  _findOrCreate(key:Key, binding:Binding, deps:List) {\n    try {\n      var instance = this.injector._getInstance(key);\n      if (!_isWaiting(instance)) return instance;\n      return FunctionWrapper.apply(binding.factory, deps);\n    } catch (e) {\n      this.injector._clear(key);\n      throw new InstantiationError(e, key);\n    }\n  }\n\n  _cacheInstance(key, instance) {\n    this.injector._setInstance(key, instance);\n    return instance\n  }\n}\n\n\nfunction _flattenBindings(bindings:List, res:Map) {\n  ListWrapper.forEach(bindings, function (b) {\n    if (b instanceof Binding) {\n      MapWrapper.set(res, b.key.id, b);\n\n    } else if (b instanceof Type) {\n      var s = bind(b).toClass(b);\n      MapWrapper.set(res, s.key.id, s);\n\n    } else if (b instanceof List) {\n      _flattenBindings(b, res);\n\n    } else if (b instanceof BindingBuilder) {\n      throw new InvalidBindingError(b.token);\n\n    } else {\n      throw new InvalidBindingError(b);\n    }\n  });\n  return res;\n}\n","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.$__placeholder__0)","assert.argumentTypes($__placeholder__0)","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","($__placeholder__0 = $__placeholder__1.$__placeholder__2) === void 0 ?\n        $__placeholder__3 : $__placeholder__4","assert.type.any","assert.type.any"]}