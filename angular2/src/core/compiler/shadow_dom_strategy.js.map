{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/core/compiler/shadow_dom_strategy.js","angular2/src/core/compiler/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/@traceur/generated/TemplateParser/7","angular2/src/core/compiler/@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/@traceur/generated/TemplateParser/2924","angular2/src/core/compiler/@traceur/generated/TemplateParser/2925","angular2/src/core/compiler/@traceur/generated/TemplateParser/25","angular2/src/core/compiler/@traceur/generated/TemplateParser/2927","angular2/src/core/compiler/@traceur/generated/TemplateParser/2928","angular2/src/core/compiler/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/28","angular2/src/core/compiler/@traceur/generated/TemplateParser/2929","@traceur/generated/TemplateParser/13","angular2/src/core/compiler/@traceur/generated/TemplateParser/2930","angular2/src/core/compiler/@traceur/generated/TemplateParser/2931","angular2/src/core/compiler/@traceur/generated/TemplateParser/2935","angular2/src/core/compiler/@traceur/generated/TemplateParser/2938","angular2/src/core/compiler/@traceur/generated/TemplateParser/2939","angular2/src/core/compiler/@traceur/generated/TemplateParser/2940","angular2/src/core/compiler/@traceur/generated/TemplateParser/2941","angular2/src/core/compiler/@traceur/generated/TemplateParser/385"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/shadow_dom_strategy.js","sourceRoot":"/Users/jbisa/ksi/devel/angular-master/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {Type, isBlank, isPresent, int} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {List, ListWrapper, MapWrapper, Map} from 'angular2/src/facade/collection';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\n\nimport {View} from './view';\n\nimport {Content} from './shadow_dom_emulation/content_tag';\nimport {LightDom} from './shadow_dom_emulation/light_dom';\nimport {ShadowCss} from './shadow_dom_emulation/shadow_css';\n\nimport {StyleInliner} from './style_inliner';\nimport {StyleUrlResolver} from './style_url_resolver';\n\nexport class ShadowDomStrategy {\n  attachTemplate(el, view:View) {}\n  constructLightDom(lightDomView:View, shadowDomView:View, el) {}\n  polyfillDirectives():List<Type> { return null; }\n  // TODO(vicb): union types: return either a string or a Promise<string>\n  transformStyleText(cssText: string, baseUrl: string, component: Type) {}\n  handleStyleElement(styleEl) {};\n  shimContentElement(component: Type, element) {}\n  shimHostElement(component: Type, element) {}\n}\n\n/**\n * This strategy emulates the Shadow DOM for the templates, styles **excluded**:\n * - components templates are added as children of their component element,\n * - styles are moved from the templates to the styleHost (i.e. the document head).\n *\n * Notes:\n * - styles are **not** scoped to their component and will apply to the whole document,\n * - you can **not** use shadow DOM specific selectors in the styles\n */\nexport class EmulatedUnscopedShadowDomStrategy extends ShadowDomStrategy {\n  _styleUrlResolver: StyleUrlResolver;\n  _lastInsertedStyle;\n  _styleHost;\n\n  constructor(styleUrlResolver: StyleUrlResolver, styleHost) {\n    super();\n    this._styleUrlResolver = styleUrlResolver;\n    this._styleHost = styleHost;\n  }\n\n  attachTemplate(el, view:View){\n    DOM.clearNodes(el);\n    _moveViewNodesIntoParent(el, view);\n  }\n\n  constructLightDom(lightDomView:View, shadowDomView:View, el) {\n    return new LightDom(lightDomView, shadowDomView, el);\n  }\n\n  polyfillDirectives():List<Type> {\n    return [Content];\n  }\n\n  transformStyleText(cssText: string, baseUrl: string, component: Type) {\n    return this._styleUrlResolver.resolveUrls(cssText, baseUrl);\n  }\n\n  handleStyleElement(styleEl) {\n    DOM.remove(styleEl);\n\n    var cssText = DOM.getText(styleEl);\n\n    if (!MapWrapper.contains(_sharedStyleTexts, cssText)) {\n      // Styles are unscoped and shared across components, only append them to the head\n      // when there are not present yet\n      MapWrapper.set(_sharedStyleTexts, cssText, true);\n      this._insertStyleElement(this._styleHost, styleEl);\n    }\n  };\n\n  _insertStyleElement(host, style) {\n    if (isBlank(this._lastInsertedStyle)) {\n      var firstChild = DOM.firstChild(host);\n      if (isPresent(firstChild)) {\n        DOM.insertBefore(firstChild, style);\n      } else {\n        DOM.appendChild(host, style);\n      }\n    } else {\n      DOM.insertAfter(this._lastInsertedStyle, style);\n    }\n    this._lastInsertedStyle = style;\n  }\n}\n\n/**\n * This strategy emulates the Shadow DOM for the templates, styles **included**:\n * - components templates are added as children of their component element,\n * - both the template and the styles are modified so that styles are scoped to the component\n *   they belong to,\n * - styles are moved from the templates to the styleHost (i.e. the document head).\n *\n * Notes:\n * - styles are scoped to their component and will apply only to it,\n * - a common subset of shadow DOM selectors are supported,\n * - see `ShadowCss` for more information and limitations.\n */\nexport class EmulatedScopedShadowDomStrategy extends EmulatedUnscopedShadowDomStrategy {\n  _styleInliner: StyleInliner;\n\n  constructor(styleInliner: StyleInliner, styleUrlResolver: StyleUrlResolver, styleHost) {\n    super(styleUrlResolver, styleHost);\n    this._styleInliner = styleInliner;\n  }\n\n  transformStyleText(cssText: string, baseUrl: string, component: Type) {\n    cssText = this._styleUrlResolver.resolveUrls(cssText, baseUrl);\n    var css = this._styleInliner.inlineImports(cssText, baseUrl);\n    if (PromiseWrapper.isPromise(css)) {\n      return css.then((css) => _shimCssForComponent(css, component));\n    } else {\n      return _shimCssForComponent(css, component);\n    }\n  }\n\n  handleStyleElement(styleEl) {\n    DOM.remove(styleEl);\n    this._insertStyleElement(this._styleHost, styleEl);\n  };\n\n  shimContentElement(component: Type, element) {\n    var id = _getComponentId(component);\n    var attrName = _getContentAttribute(id);\n    DOM.setAttribute(element, attrName, '');\n  }\n\n  shimHostElement(component: Type, element) {\n    var id = _getComponentId(component);\n    var attrName = _getHostAttribute(id);\n    DOM.setAttribute(element, attrName, '');\n  }\n}\n\n/**\n * This strategies uses the native Shadow DOM support.\n *\n * The templates for the component are inserted in a Shadow Root created on the component element.\n * Hence they are strictly isolated.\n */\nexport class NativeShadowDomStrategy extends ShadowDomStrategy {\n  _styleUrlResolver: StyleUrlResolver;\n\n  constructor(styleUrlResolver: StyleUrlResolver) {\n    super();\n    this._styleUrlResolver = styleUrlResolver;\n  }\n\n  attachTemplate(el, view:View){\n    _moveViewNodesIntoParent(DOM.createShadowRoot(el), view);\n  }\n\n  constructLightDom(lightDomView:View, shadowDomView:View, el) {\n    return null;\n  }\n\n  polyfillDirectives():List<Type> {\n    return [];\n  }\n\n  transformStyleText(cssText: string, baseUrl: string, component: Type) {\n    return this._styleUrlResolver.resolveUrls(cssText, baseUrl);\n  }\n}\n\nfunction _moveViewNodesIntoParent(parent, view) {\n  for (var i = 0; i < view.nodes.length; ++i) {\n    DOM.appendChild(parent, view.nodes[i]);\n  }\n}\n\nvar _componentUIDs: Map<Type, int> = MapWrapper.create();\nvar _nextComponentUID: int = 0;\nvar _sharedStyleTexts: Map<string, boolean> = MapWrapper.create();\n\nfunction _getComponentId(component: Type) {\n  var id = MapWrapper.get(_componentUIDs, component);\n  if (isBlank(id)) {\n    id = _nextComponentUID++;\n    MapWrapper.set(_componentUIDs, component, id);\n  }\n  return id;\n}\n\n// Return the attribute to be added to the component\nfunction _getHostAttribute(id: int) {\n  return `_nghost-${id}`;\n}\n\n// Returns the attribute to be added on every single nodes in the component\nfunction _getContentAttribute(id: int) {\n  return `_ngcontent-${id}`;\n}\n\nfunction _shimCssForComponent(cssText: string, component: Type): string {\n  var id = _getComponentId(component);\n  var shadowCss = new ShadowCss();\n  return shadowCss.shimCssText(cssText, _getContentAttribute(id), _getHostAttribute(id));\n}\n\n// Reset the caches - used for tests only\nexport function resetShadowDomCache() {\n  MapWrapper.clear(_componentUIDs);\n  _nextComponentUID = 0;\n  MapWrapper.clear(_sharedStyleTexts);\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.type.any","assert.type.any","assert.genericType($__placeholder__0)","assert.type.any","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","assert.type.any","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type($__placeholder__0, $__placeholder__1)"]}