{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/url_resolver.js","angular2/src/core/compiler/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/@traceur/generated/TemplateParser/7","angular2/src/core/compiler/@traceur/generated/TemplateParser/9","angular2/src/core/compiler/@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yFAAoB,UAAS,SAAQ;;;;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,UAAoB,KAAG,IAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;kBGFY,CAAA,SAAQ,AAAC,iBCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,cCEP,SAAM,YAAU,CAGV,AAAG,CAAA;AACZ,aAAI,OAAM,AAAE,CAAA,WAAU,EAAE,CAAC,CAAG;AAC1B,sBAAU,EAAE,EAAI,CAAA,GAAE,cAAc,AAAE,CAAA,GAAE,CAAC,CAAC;UACxC;AAAA,QDR8C,ACShD,CDTiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,eCU5C,OAAM,CAAN,UAAQ,OAAc,CAAG,CAAA,GAAU,CAAA;ACZrC,iBAAK,cAAc,CAAA,OAAA,CCAnB,CAAA,MAAK,KAAK,OAAA,CAAA,IAAA,CAAV,CAAA,MAAK,KAAK,OAAA,CDA4B,CAAA;ADalC,eAAI,OAAO,AAAC,CAAA,OAAM,CAAC,CAAG;AACpB,wBAAU,EAAE,KAAK,EAAI,IAAE,CAAC;AGd9B,mBAAO,CAAA,MAAK,WAAW,AAAE,CHeZ,CAAA,WAAU,EAAE,KAAK,CGfa,CDA3C,CAAA,MAAK,KAAK,OAAA,CCAqD,CAAA;YHgB3D;AAAA,AAEA,eAAI,OAAM,AAAE,CAAA,GAAE,CAAC,CAAA,EAAK,CAAA,GAAE,GAAK,GAAC;AGlBhC,mBAAO,CAAA,MAAK,WAAY,AAAC,CHkBiB,CAAA,OAAM,CGlBL,CDA3C,CAAA,MAAK,KAAK,OAAA,CCAqD,CAAA;AAAA,AHoB3D,eAAI,GAAE,CAAE,CAAA,CAAC,GAAK,IAAE,CAAG;AACjB,kBAAM,IAAI,cAAY,AAAE,EAAA,4BAA6B,EAAA,IAAE,EAAA,SAAU,EAAA,QAAM,EAAG,CAAC;YAC7E;AAAA,AAEI,cAAA,CAAA,CAAA,EAAI,CAAA,aAAY,WAAY,AAAC,CAAA,SAAQ,CAAG,IAAE,CAAC,CAAC;AAEhD,eAAI,SAAQ,AAAE,CAAA,CAAA,CAAE,CAAA,CAAC,CAAC,CAAG;AG1BzB,mBAAO,CAAA,MAAK,WAAW,AAAE,CH2BZ,CAAA,GAAE,CG3B4B,CDA3C,CAAA,MAAK,KAAK,OAAA,CCAqD,CAAA;YH4B3D;AAAA,AAEA,sBAAU,EAAE,KAAK,EAAI,CAAA,OAAM,EAAI,OAAK,CAAA,CAAI,IAAE,CAAC;AG9B/C,iBAAO,CAAA,MAAK,WAAY,AAAC,CH+Bd,CAAA,WAAU,EAAE,KAAK,CG/Be,CDA3C,CAAA,MAAK,KAAK,OAAA,CCAqD,CAAA;UHgC7D,MD7B8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;AMAtE,WAAK,eAAe,AAAC,CAAA,WAAA,UAAA,QAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAQ,AAAG,CAAA;AAAC,eAAA,EFD1B,CAAA,MAAK,KAAK,OAAA,CAAA,CAAV,EAAA,MAAK,KAAK,OAAA,CAAA,CAAA,CECuC;QAAC,CAAC,CAAC,CAAC;gBJkCrC,CAAA,aAAY,OAAO,AAAE,CAAA,eAAc,CAAC;ILjCrB;EAC3B,CAAA;ADDI,CAAC,CAAC;AMoC4B","file":"angular2/src/core/compiler/url_resolver.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {isPresent, isBlank, RegExpWrapper, BaseException} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nexport class UrlResolver {\n  static a;\n\n  constructor() {\n    if (isBlank(UrlResolver.a)) {\n      UrlResolver.a = DOM.createElement('a');\n    }\n  }\n\n  resolve(baseUrl: string, url: string): string {\n    if (isBlank(baseUrl)) {\n      UrlResolver.a.href = url;\n      return UrlResolver.a.href;\n    }\n\n    if (isBlank(url) || url == '') return baseUrl;\n\n    if (url[0] == '/') {\n      throw new BaseException(`Could not resolve the url ${url} from ${baseUrl}`);\n    }\n\n    var m = RegExpWrapper.firstMatch(_schemeRe, url);\n\n    if (isPresent(m[1])) {\n      return url;\n    }\n\n    UrlResolver.a.href = baseUrl + '/../' + url;\n    return UrlResolver.a.href;\n  }\n}\n\nvar _schemeRe = RegExpWrapper.create('^([^:/?#]+:)?');\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}