{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/forms/model_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/38"],"names":[],"mappings":"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","file":"angular2/test/forms/model_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach, el} from 'angular2/test_lib';\nimport {ControlGroup, Control, OptionalControl} from 'angular2/forms';\nimport * as validations from 'angular2/forms';\n\nexport function main() {\n  describe(\"Form Model\", () => {\n    describe(\"Control\", () => {\n      describe(\"validator\", () => {\n        it(\"should run validator with the initial value\", () => {\n          var c = new Control(\"value\", validations.required);\n          expect(c.valid).toEqual(true);\n        });\n\n        it(\"should rerun the validator when the value changes\", () => {\n          var c = new Control(\"value\", validations.required);\n          c.updateValue(null);\n          expect(c.valid).toEqual(false);\n        });\n\n        it(\"should return errors\", () => {\n          var c = new Control(null, validations.required);\n          expect(c.errors).toEqual({\"required\" : true});\n        });\n      });\n    });\n\n    describe(\"ControlGroup\", () => {\n      describe(\"value\", () => {\n        it(\"should be the reduced value of the child controls\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control(\"111\"),\n            \"two\": new Control(\"222\")\n          });\n          expect(g.value).toEqual({\"one\": \"111\", \"two\": \"222\"});\n        });\n\n        it(\"should be empty when there are no child controls\", () => {\n          var g = new ControlGroup({});\n          expect(g.value).toEqual({});\n        });\n\n        it(\"should support nested groups\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control(\"111\"),\n            \"nested\": new ControlGroup({\n              \"two\" : new Control(\"222\")\n            })\n          });\n          expect(g.value).toEqual({\"one\": \"111\", \"nested\" : {\"two\": \"222\"}});\n\n          g.controls[\"nested\"].controls[\"two\"].updateValue(\"333\");\n\n          expect(g.value).toEqual({\"one\": \"111\", \"nested\" : {\"two\": \"333\"}});\n        });\n      });\n\n      describe(\"validator\", () => {\n        it(\"should run the validator with the initial value (valid)\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control('value', validations.required)\n          });\n\n          expect(g.valid).toEqual(true);\n\n          expect(g.errors).toEqual(null);\n        });\n\n        it(\"should run the validator with the initial value (invalid)\", () => {\n          var one = new Control(null, validations.required);\n          var g = new ControlGroup({\"one\": one});\n\n          expect(g.valid).toEqual(false);\n\n          expect(g.errors).toEqual({\"required\": [one]});\n        });\n\n        it(\"should run the validator with the value changes\", () => {\n          var c = new Control(null, validations.required);\n          var g = new ControlGroup({\"one\": c});\n\n          c.updateValue(\"some value\");\n\n          expect(g.valid).toEqual(true);\n          expect(g.errors).toEqual(null);\n        });\n      });\n    });\n\n    describe(\"OptionalControl\", () => {\n      it(\"should read properties from the wrapped component\", () => {\n        var wrapperControl = new Control(\"value\", validations.required);\n        var c = new OptionalControl(wrapperControl, true);\n\n        expect(c.value).toEqual('value');\n        expect(c.status).toEqual('VALID');\n        expect(c.validator).toEqual(validations.required);\n      });\n\n      it(\"should update the wrapped component\", () => {\n        var wrappedControl = new Control(\"value\");\n        var c = new OptionalControl(wrappedControl, true);\n\n        c.validator = validations.required;\n        c.updateValue(\"newValue\");\n\n\n        expect(wrappedControl.validator).toEqual(validations.required);\n        expect(wrappedControl.value).toEqual('newValue');\n      });\n\n      it(\"should not include an inactive component into the group value\", () => {\n        var group = new ControlGroup({\n          \"required\" : new Control(\"requiredValue\"),\n          \"optional\" : new OptionalControl(new Control(\"optionalValue\"), false)\n        });\n\n        expect(group.value).toEqual({\"required\" : \"requiredValue\"});\n\n        group.controls[\"optional\"].cond = true;\n\n        expect(group.value).toEqual({\"required\" : \"requiredValue\", \"optional\" : \"optionalValue\"});\n      });\n\n      it(\"should not run validations on an inactive component\", () => {\n        var group = new ControlGroup({\n          \"required\" : new Control(\"requiredValue\", validations.required),\n          \"optional\" : new OptionalControl(new Control(\"\", validations.required), false)\n        });\n\n        expect(group.valid).toEqual(true);\n\n        group.controls[\"optional\"].cond = true;\n\n        expect(group.valid).toEqual(false);\n      });\n    });\n\n  });\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__m;"]}