{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/integration_spec.js","angular2/test/core/compiler/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","angular2/test/core/compiler/@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/7","angular2/test/core/compiler/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/integration_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, xit, it, expect, beforeEach, ddescribe, iit, el} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Type, isPresent, BaseException, assertionsEnabled, isJsObject} from 'angular2/src/facade/lang';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\n\nimport {Injector} from 'angular2/di';\nimport {Lexer, Parser, dynamicChangeDetection,\n  DynamicChangeDetection, Pipe, PipeRegistry} from 'angular2/change_detection';\n\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {MockTemplateResolver} from 'angular2/src/mock/template_resolver_mock';\nimport {BindingPropagationConfig} from 'angular2/src/core/compiler/binding_propagation_config';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {CssProcessor} from 'angular2/src/core/compiler/css_processor';\n\nimport {Decorator, Component, Viewport} from 'angular2/src/core/annotations/annotations';\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {Parent, Ancestor} from 'angular2/src/core/annotations/visibility';\nimport {EventEmitter} from 'angular2/src/core/annotations/di';\n\nimport {If} from 'angular2/src/directives/if';\n\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\n\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nexport function main() {\n  describe('integration tests', function() {\n    var compiler, tplResolver;\n\n    function createCompiler(tplResolver, changedDetection) {\n      var urlResolver = new UrlResolver();\n      return new Compiler(changedDetection,\n        new TemplateLoader(null, null),\n        new DirectiveMetadataReader(),\n        new Parser(new Lexer()),\n        new CompilerCache(),\n        new NativeShadowDomStrategy(new StyleUrlResolver(urlResolver)),\n        tplResolver,\n        new ComponentUrlMapper(),\n        urlResolver,\n        new CssProcessor(null)\n      );\n    }\n\n    beforeEach( () => {\n      tplResolver = new MockTemplateResolver();\n      compiler = createCompiler(tplResolver, dynamicChangeDetection);\n    });\n\n    describe('react to record changes', function() {\n      var view, ctx, cd;\n      function createView(pv) {\n        ctx = new MyComp();\n        view = pv.instantiate(\n          null,\n          null,\n          reflector\n        );\n        view.hydrate(new Injector([]), null, ctx);\n        cd = view.changeDetector;\n      }\n\n      it('should consume text node changes', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div>{{ctxProp}}</div>'}));\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          ctx.ctxProp = 'Hello World!';\n\n          cd.detectChanges();\n          expect(DOM.getInnerHTML(view.nodes[0])).toEqual('Hello World!');\n          done();\n        });\n      });\n\n      it('should consume element binding changes', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [id]=\"ctxProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          expect(view.nodes[0].id).toEqual('Hello World!');\n          done();\n        });\n      });\n\n      it('should consume binding to aria-* attributes', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [aria-label]=\"ctxProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Initial aria label';\n          cd.detectChanges();\n          expect(DOM.getAttribute(view.nodes[0], 'aria-label')).toEqual('Initial aria label');\n\n          ctx.ctxProp = 'Changed aria label';\n          cd.detectChanges();\n          expect(DOM.getAttribute(view.nodes[0], 'aria-label')).toEqual('Changed aria label');\n\n          done();\n        });\n      });\n\n      it('should consume binding to property names where attr name and property name do not match', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [tabindex]=\"ctxNumProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n          expect(view.nodes[0].tabIndex).toEqual(0);\n\n          ctx.ctxNumProp = 5;\n          cd.detectChanges();\n          expect(view.nodes[0].tabIndex).toEqual(5);\n\n          done();\n        });\n      });\n\n      it('should consume binding to inner-html', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div inner-html=\"{{ctxProp}}\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Some <span>HTML</span>';\n          cd.detectChanges();\n          expect(DOM.getInnerHTML(view.nodes[0])).toEqual('Some <span>HTML</span>');\n\n          ctx.ctxProp = 'Some other <div>HTML</div>';\n          cd.detectChanges();\n          expect(DOM.getInnerHTML(view.nodes[0])).toEqual('Some other <div>HTML</div>');\n\n          done();\n        });\n      });\n\n      it('should consume directive watch expression change.', (done) => {\n        var tpl =\n          '<div>' +\n            '<div my-dir [elprop]=\"ctxProp\"></div>' +\n            '<div my-dir elprop=\"Hi there!\"></div>' +\n            '<div my-dir elprop=\"Hi {{\\'there!\\'}}\"></div>' +\n            '<div my-dir elprop=\"One more {{ctxProp}}\"></div>' +\n          '</div>'\n        tplResolver.setTemplate(MyComp, new Template({inline: tpl, directives: [MyDir]}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          expect(view.elementInjectors[0].get(MyDir).dirProp).toEqual('Hello World!');\n          expect(view.elementInjectors[1].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.elementInjectors[2].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.elementInjectors[3].get(MyDir).dirProp).toEqual('One more Hello World!');\n          done();\n        });\n      });\n\n      it(\"should support pipes in bindings and bind config\", (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<component-with-pipes #comp [prop]=\"ctxProp | double\"></component-with-pipes>',\n            directives: [ComponentWithPipes]\n          }));\n\n\n        var registry = new PipeRegistry({\n          \"double\" : [new DoublePipeFactory()]\n        });\n        var changeDetection = new DynamicChangeDetection(registry);\n        var compiler = createCompiler(tplResolver, changeDetection);\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'a';\n          cd.detectChanges();\n\n          var comp = view.contextWithLocals.get(\"comp\");\n\n          // it is doubled twice: once in the binding, second time in the bind config\n          expect(comp.prop).toEqual('aaaa');\n          done();\n        });\n      });\n\n      it('should support nested components.', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<child-cmp></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          expect(view.nodes[0].shadowRoot.childNodes[0].nodeValue).toEqual('hello');\n          done();\n        });\n      });\n\n      // GH issue 328 - https://github.com/angular/angular/issues/328\n      it('should support different directive types on a single node', (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<child-cmp my-dir [elprop]=\"ctxProp\"></child-cmp>',\n            directives: [MyDir, ChildComp]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          var elInj = view.elementInjectors[0];\n          expect(elInj.get(MyDir).dirProp).toEqual('Hello World!');\n          expect(elInj.get(ChildComp).dirProp).toEqual(null);\n\n          done();\n        });\n      });\n\n      it('should support directives where a binding attribute is not given', function(done) {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            // No attribute \"el-prop\" specified.\n            inline: '<p my-dir></p>',\n            directives: [MyDir]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          done();\n        });\n      });\n\n      it('should support template directives via `<template>` elements.', (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<div><template some-viewport var-greeting=\"some-tmpl\"><copy-me>{{greeting}}</copy-me></template></div>',\n            directives: [SomeViewport]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          var childNodesOfWrapper = view.nodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          done();\n        });\n      });\n\n      it('should support template directives via `template` attribute.', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<div><copy-me template=\"some-viewport: var greeting=some-tmpl\">{{greeting}}</copy-me></div>',\n          directives: [SomeViewport]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          var childNodesOfWrapper = view.nodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          done();\n        });\n      });\n\n      it('should assign the component instance to a var-', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<p><child-cmp var-alice></child-cmp></p>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.contextWithLocals).not.toBe(null);\n          expect(view.contextWithLocals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          done();\n        })\n      });\n\n      it('should assign two component instances each with a var-', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<p><child-cmp var-alice></child-cmp><child-cmp var-bob></p>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.contextWithLocals).not.toBe(null);\n          expect(view.contextWithLocals.get('alice')).toBeAnInstanceOf(ChildComp);\n          expect(view.contextWithLocals.get('bob')).toBeAnInstanceOf(ChildComp);\n          expect(view.contextWithLocals.get('alice')).not.toBe(view.contextWithLocals.get('bob'));\n\n          done();\n        })\n      });\n\n      it('should assign the component instance to a var- with shorthand syntax', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<child-cmp #alice></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.contextWithLocals).not.toBe(null);\n          expect(view.contextWithLocals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          done();\n        })\n      });\n\n      it('should assign the element instance to a user-defined variable', (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({inline: '<p><div var-alice><i>Hello</i></div></p>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          expect(view.contextWithLocals).not.toBe(null);\n\n          var value = view.contextWithLocals.get('alice');\n          expect(value).not.toBe(null);\n          expect(value.tagName.toLowerCase()).toEqual('div');\n\n          done();\n        })\n      });\n\n      it('should provide binding configuration config to the component', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<push-cmp #cmp></push-cmp>',\n          directives: [[[PushBasedComp]]]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var cmp = view.contextWithLocals.get('cmp');\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(1);\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(1);\n\n          cmp.propagate();\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(2);\n          done();\n        })\n      });\n\n      it('should create a component that injects a @Parent', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<some-directive><cmp-with-parent #child></cmp-with-parent></some-directive>',\n          directives: [SomeDirective, CompWithParent]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var childComponent = view.contextWithLocals.get('child');\n          expect(childComponent.myParent).toBeAnInstanceOf(SomeDirective);\n\n          done();\n        })\n      });\n\n      it('should create a component that injects an @Ancestor', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: `\n            <some-directive>\n              <p>\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var childComponent = view.contextWithLocals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          done();\n        })\n      });\n\n      it('should create a component that injects an @Ancestor through viewport directive', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: `\n            <some-directive>\n              <p *if=\"true\">\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor, If]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          cd.detectChanges();\n\n          var subview = view.viewContainers[0].get(0);\n          var childComponent = subview.contextWithLocals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          done();\n        })\n      });\n\n      it('should support events', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<div emitter listener></div>',\n          directives: [DecoratorEmitingEvent, DecoratorListeningEvent]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var injector = view.elementInjectors[0];\n\n          var emitter = injector.get(DecoratorEmitingEvent);\n          var listener = injector.get(DecoratorListeningEvent);\n\n          expect(emitter.msg).toEqual('');\n          expect(listener.msg).toEqual('');\n\n          emitter.fireEvent('fired !');\n          expect(emitter.msg).toEqual('fired !');\n          expect(listener.msg).toEqual('fired !');\n\n          done();\n        });\n      });\n\n    });\n\n    if (assertionsEnabled()) {\n\n      function expectCompileError(inlineTpl, errMessage, done) {\n        tplResolver.setTemplate(MyComp, new Template({inline: inlineTpl}));\n        PromiseWrapper.then(compiler.compile(MyComp),\n          (value) => {\n            done(\"Test failure: should not have come here as an exception was expected\");\n          },\n          (err) => {\n            expect(err.message).toEqual(errMessage);\n            done();\n          }\n        );\n      }\n\n      it('should raise an error if no directive is registered for an unsupported DOM property', (done) => {\n        expectCompileError(\n          '<div [some-prop]=\"foo\"></div>',\n          'Missing directive to handle \\'some-prop\\' in MyComp: <div [some-prop]=\"foo\">',\n          done\n        );\n      });\n\n      it('should raise an error if no directive is registered for a template with template bindings', (done) => {\n        expectCompileError(\n          '<div><div template=\"if: foo\"></div></div>',\n          'Missing directive to handle \\'if\\' in <div template=\"if: foo\">',\n          done\n        );\n      });\n\n      it('should raise an error for missing template directive (1)', (done) => {\n        expectCompileError(\n          '<div><template foo></template></div>',\n          'Missing directive to handle: <template foo>',\n          done\n        );\n      });\n\n      it('should raise an error for missing template directive (2)', (done) => {\n        expectCompileError(\n          '<div><template *if=\"condition\"></template></div>',\n          'Missing directive to handle: <template *if=\"condition\">',\n          done\n        );\n      });\n\n      it('should raise an error for missing template directive (3)', (done) => {\n        expectCompileError(\n          '<div *if=\"condition\"></div>',\n          'Missing directive to handle \\'if\\' in MyComp: <div *if=\"condition\">',\n          done\n        );\n      });\n    }\n  });\n}\n\n@Decorator({\n  selector: '[my-dir]',\n  bind: {'dirProp':'elprop'}\n})\nclass MyDir {\n  dirProp:string;\n  constructor() {\n    this.dirProp = '';\n  }\n}\n\n@Component({selector: 'push-cmp'})\n@Template({inline: '{{field}}'})\nclass PushBasedComp {\n  numberOfChecks:number;\n  bpc:BindingPropagationConfig;\n\n  constructor(bpc:BindingPropagationConfig) {\n    this.numberOfChecks = 0;\n    this.bpc = bpc;\n    bpc.shouldBePropagated();\n  }\n\n  get field(){\n    this.numberOfChecks++;\n    return \"fixed\";\n  }\n\n  propagate() {\n    this.bpc.shouldBePropagatedFromRoot();\n  }\n}\n\n@Component()\nclass MyComp {\n  ctxProp:string;\n  ctxNumProp;\n  constructor() {\n    this.ctxProp = 'initial value';\n    this.ctxNumProp = 0;\n  }\n}\n\n\n@Component({\n  selector: 'component-with-pipes',\n  bind: {\n    \"prop\": \"prop | double\"\n  }\n})\n@Template({\n  inline: ''\n})\nclass ComponentWithPipes {\n  prop:string;\n}\n\n@Component({\n  selector: 'child-cmp',\n  componentServices: [MyService]\n})\n@Template({\n  directives: [MyDir],\n  inline: '{{ctxProp}}'\n})\nclass ChildComp {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Decorator({\n  selector: 'some-directive'\n})\nclass SomeDirective { }\n\n@Component({\n  selector: 'cmp-with-parent'\n})\n@Template({\n  inline: '<p>Component with an injected parent</p>',\n  directives: [SomeDirective]\n})\nclass CompWithParent {\n  myParent: SomeDirective;\n  constructor(@Parent() someComp: SomeDirective) {\n    this.myParent = someComp;\n  }\n}\n\n@Component({\n  selector: 'cmp-with-ancestor'\n})\n@Template({\n  inline: '<p>Component with an injected ancestor</p>',\n  directives: [SomeDirective]\n})\nclass CompWithAncestor {\n  myAncestor: SomeDirective;\n  constructor(@Ancestor() someComp: SomeDirective) {\n    this.myAncestor = someComp;\n  }\n}\n\n@Component({\n  selector: '[child-cmp2]',\n  componentServices: [MyService]\n})\nclass ChildComp2 {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Viewport({\n  selector: '[some-viewport]'\n})\nclass SomeViewport {\n  constructor(container: ViewContainer) {\n    container.create().setLocal('some-tmpl', 'hello');\n    container.create().setLocal('some-tmpl', 'again');\n  }\n}\n\nclass MyService {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\nclass DoublePipe extends Pipe {\n  supports(obj) {\n    return true;\n  }\n\n  transform(value) {\n    return `${value}${value}`;\n  }\n}\n\nclass DoublePipeFactory {\n  supports(obj) {\n    return true;\n  }\n\n  create() {\n    return new DoublePipe();\n  }\n}\n\n@Decorator({\n  selector: '[emitter]',\n  events: {'event': 'onEvent($event)'}\n})\nclass DecoratorEmitingEvent {\n  msg: string;\n  emitter;\n\n  constructor(@EventEmitter('event') emitter:Function) {\n    this.msg = '';\n    this.emitter = emitter;\n  }\n\n  fireEvent(msg: string) {\n    this.emitter(msg);\n  }\n\n  onEvent(msg: string) {\n    this.msg = msg;\n  }\n}\n\n@Decorator({\n  selector: '[listener]',\n  events: {'event': 'onEvent($event)'}\n})\nclass DecoratorListeningEvent {\n  msg: string;\n\n  constructor() {\n    this.msg = '';\n  }\n\n  onEvent(msg: string) {\n    this.msg = msg;\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)","assert.type.$__placeholder__0)"]}