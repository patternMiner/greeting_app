{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/style_inliner_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","angular2/test/core/compiler/@traceur/generated/TemplateParser/8","angular2/test/core/compiler/@traceur/generated/TemplateParser/7","angular2/test/core/compiler/@traceur/generated/TemplateParser/9","angular2/test/core/compiler/@traceur/generated/TemplateParser/25","angular2/test/core/compiler/@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/style_inliner_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular-master/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, it, expect, beforeEach, ddescribe, iit, xit, el} from 'angular2/test_lib';\nimport {StyleInliner} from 'angular2/src/core/compiler/style_inliner';\n\nimport {isBlank} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {Map, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\n\nexport function main() {\n  describe('StyleInliner', () => {\n    var xhr, inliner;\n\n    beforeEach(() => {\n      xhr = new FakeXHR();\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      inliner = new StyleInliner(xhr, styleUrlResolver, urlResolver);\n    });\n\n    describe('loading', () => {\n      it('should return a string when there is no import statement', () => {\n        var css = '.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).not.toBePromise();\n        expect(loadedCss).toEqual(css);\n      });\n\n      it('should inline @import rules', (done) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import url(\"one.css\");.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.one {}\\n.main {}');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n\n      // TODO(vicb): fix the StyleInliner\n      it('should support url([unquoted url]) in @import rules', (done) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import url(one.css);.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.one {}\\n.main {}');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n\n      it('should handle @import error gracefuly', (done) => {\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('/* failed to import http://base/one.css */\\n.main {}');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n\n      it('should inline multiple @import rules', (done) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        xhr.reply('http://base/two.css', '.two {}');\n        var css = '@import \"one.css\";@import \"two.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.one {}\\n.two {}\\n.main {}');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n\n      it('should inline nested @import rules', (done) => {\n        xhr.reply('http://base/one.css', '@import \"two.css\";.one {}');\n        xhr.reply('http://base/two.css', '.two {}');\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.two {}\\n.one {}\\n.main {}');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n\n      it('should handle circular dependencies gracefuly', (done) => {\n        xhr.reply('http://base/one.css', '@import \"two.css\";.one {}');\n        xhr.reply('http://base/two.css', '@import \"one.css\";.two {}');\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.two {}\\n.one {}\\n.main {}');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n\n      it('should handle invalid @import fracefuly', (done) => {\n        // Invalid rule: the url is not quoted\n        var css = '@import one.css;.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('/* Invalid import rule: \"@import one.css;\" */.main {}');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n    });\n\n    describe('media query', () => {\n      it('should wrap inlined content in media query', (done) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import \"one.css\" (min-width: 700px) and (orientation: landscape);';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('@media (min-width: 700px) and (orientation: landscape) {\\n.one {}\\n}\\n');\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n    });\n\n    describe('url rewritting', () => {\n      it('should rewrite url in inlined content', (done) => {\n        // it should rewrite both '@import' and 'url()'\n        xhr.reply('http://base/one.css', '@import \"./nested/two.css\";.one {background-image: url(\"one.jpg\");}');\n        xhr.reply('http://base/nested/two.css', '.two {background-image: url(\"../img/two.jpg\");}');\n        var css = '@import \"one.css\";'\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual(\n              \".two {background-image: url('http://base/img/two.jpg');}\\n\" +\n              \".one {background-image: url('http://base/one.jpg');}\\n\"\n            );\n            done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      });\n    });\n  });\n}\n\nclass FakeXHR extends XHR {\n  _responses: Map;\n\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n\n  get(url: string): Promise<string> {\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return PromiseWrapper.reject('xhr error');\n    }\n\n    return PromiseWrapper.resolve(response);\n  }\n\n  reply(url: string, response: string) {\n    MapWrapper.set(this._responses, url, response);\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}